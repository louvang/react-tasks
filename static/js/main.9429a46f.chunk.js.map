{"version":3,"sources":["components/PendingOverview.js","components/CompletedOverview.js","App.js","reportWebVitals.js","index.js"],"names":["PendingOverview","props","tasks","checkmarkTask","editTask","changeEditTask","deleteTask","taskItems","slice","reverse","map","taskObj","id","className","onClick","icon","value","task","onChange","disabled","CompletedOverview","completeTasks","library","add","faCircle","faCheckCircle","farCircle","storedPendingTasks","uniqid","localStorage","getItem","JSON","parse","storedCompletedTasks","App","changeNewTask","e","setState","target","submitNewTask","preventDefault","state","updatedPendingTasks","pendingTasks","concat","setItem","stringify","checkedTaskId","parentNode","currentTask","find","filter","updatedCompletedTasks","completedTasks","currentInput","children","textContent","focus","taskId","pendingTasksCopy","taskIndex","findIndex","classList","onSubmit","this","type","placeholder","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9429a46f.chunk.js","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst PendingOverview = (props) => {\n  const { tasks, checkmarkTask, editTask, changeEditTask, deleteTask } = props;\n\n  const reversedTasks = tasks.slice(0).reverse();\n\n  const taskItems = reversedTasks.map((taskObj) => (\n    <li key={taskObj.id} id={taskObj.id}>\n      <div className=\"col\">\n        <div className=\"check-col\">\n          <FontAwesomeIcon onClick={checkmarkTask} icon={['far', 'circle']} />\n        </div>\n        <div className=\"desc-col\">\n          <input value={taskObj.task} onChange={changeEditTask} disabled />\n        </div>\n      </div>\n      <div className=\"ed-col\">\n        <div className=\"edit-col\" onClick={editTask}>\n          Edit\n        </div>\n        <div className=\"delete-col pending\" onClick={deleteTask}>\n          ×\n        </div>\n      </div>\n    </li>\n  ));\n\n  return <ul className=\"overview\">{taskItems}</ul>;\n};\n\nexport default PendingOverview;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst CompletedOverview = (props) => {\n  const { completeTasks, deleteTask } = props;\n\n  const reversedTasks = completeTasks.slice(0).reverse();\n\n  const taskItems = reversedTasks.map((taskObj) => (\n    <li key={taskObj.id} id={taskObj.id}>\n      <div className=\"col\">\n        <div className=\"check-col\">\n          <FontAwesomeIcon icon={['fas', 'check-circle']} />\n        </div>\n        <div className=\"desc-col\">\n          <s>{taskObj.task}</s>\n        </div>\n      </div>\n      <div className=\"ed-col\">\n        <div className=\"delete-col completed\" onClick={deleteTask}>\n          ×\n        </div>\n      </div>\n    </li>\n  ));\n\n  return <ul className=\"overview completed\">{taskItems}</ul>;\n};\n\nexport default CompletedOverview;\n","import React, { Component } from 'react';\nimport PendingOverview from './components/PendingOverview';\nimport CompletedOverview from './components/CompletedOverview';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faCircle as farCircle } from '@fortawesome/free-regular-svg-icons';\nimport uniqid from 'uniqid';\n\nlibrary.add(faCircle, faCheckCircle, farCircle);\n\nlet storedPendingTasks = [\n  { task: 'Buy milk and bread', id: uniqid() },\n  { task: 'Refill gas', id: uniqid() },\n  { task: 'Make reservations for anniversary', id: uniqid() },\n  { task: 'Dentist appointment @ 11am', id: uniqid() },\n];\nif (localStorage.getItem('storedPendingTasks')) {\n  storedPendingTasks = JSON.parse(localStorage.getItem('storedPendingTasks'));\n}\n\nlet storedCompletedTasks = [\n  { task: 'Laundry', id: uniqid() },\n  { task: 'Return library books', id: uniqid() },\n];\nif (localStorage.getItem('storedCompletedTasks')) {\n  storedCompletedTasks = JSON.parse(localStorage.getItem('storedCompletedTasks'));\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: '',\n      pendingTasks: storedPendingTasks,\n      completedTasks: storedCompletedTasks,\n    };\n  }\n\n  changeNewTask = (e) => {\n    this.setState({\n      task: e.target.value,\n    });\n  };\n\n  submitNewTask = (e) => {\n    e.preventDefault();\n    const taskObj = { task: this.state.task, id: uniqid() };\n    const updatedPendingTasks = this.state.pendingTasks.concat(taskObj);\n    this.setState({\n      task: '',\n      pendingTasks: updatedPendingTasks,\n    });\n    localStorage.setItem('storedPendingTasks', JSON.stringify(updatedPendingTasks));\n  };\n\n  checkmarkTask = (e) => {\n    const checkedTaskId = e.target.parentNode.parentNode.parentNode.id;\n    const currentTask = this.state.pendingTasks.find((taskObj) => {\n      return taskObj.id === checkedTaskId;\n    });\n    const updatedPendingTasks = this.state.pendingTasks.filter((taskObj) => {\n      return taskObj.id !== checkedTaskId;\n    });\n    const updatedCompletedTasks = this.state.completedTasks.concat(currentTask);\n\n    this.setState({\n      pendingTasks: updatedPendingTasks,\n      completedTasks: updatedCompletedTasks,\n    });\n    localStorage.setItem('storedPendingTasks', JSON.stringify(updatedPendingTasks));\n    localStorage.setItem('storedCompletedTasks', JSON.stringify(updatedCompletedTasks));\n  };\n\n  editTask = (e) => {\n    const currentInput = e.target.parentNode.parentNode.children[0].children[1].children[0];\n\n    if (e.target.textContent === 'Edit') {\n      e.target.textContent = 'Submit';\n      currentInput.disabled = false;\n      currentInput.focus();\n    } else {\n      e.target.textContent = 'Edit';\n      currentInput.disabled = true;\n      localStorage.setItem('storedPendingTasks', JSON.stringify(this.state.pendingTasks));\n    }\n  };\n\n  changeEditTask = (e) => {\n    const taskId = e.target.parentNode.parentNode.parentNode.id;\n    const pendingTasksCopy = this.state.pendingTasks.slice();\n    const taskIndex = pendingTasksCopy.findIndex((taskObj) => {\n      return taskObj.id === taskId;\n    });\n    pendingTasksCopy[taskIndex] = { task: e.target.value, id: taskId };\n    this.setState({\n      pendingTasks: pendingTasksCopy,\n    });\n  };\n\n  deleteTask = (e) => {\n    const taskId = e.target.parentNode.parentNode.id;\n    if (e.target.classList[1] === 'pending') {\n      const updatedPendingTasks = this.state.pendingTasks.filter((taskObj) => {\n        return taskObj.id !== taskId;\n      });\n      this.setState({\n        pendingTasks: updatedPendingTasks,\n      });\n      localStorage.setItem('storedPendingTasks', JSON.stringify(updatedPendingTasks));\n    } else if (e.target.classList[1] === 'completed') {\n      const updatedCompletedTasks = this.state.completedTasks.filter((taskObj) => {\n        return taskObj.id !== taskId;\n      });\n      this.setState({\n        completedTasks: updatedCompletedTasks,\n      });\n      localStorage.setItem('storedCompletedTasks', JSON.stringify(updatedCompletedTasks));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>My Tasks</h1>\n\n        <form onSubmit={this.submitNewTask}>\n          <div className=\"add-task-row\">\n            <div className=\"col\">\n              <div className=\"check-col\">\n                <FontAwesomeIcon icon={['far', 'circle']} />\n              </div>\n              <div className=\"desc-col\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Add task here...\"\n                  value={this.state.task}\n                  onChange={this.changeNewTask}\n                />\n              </div>\n            </div>\n\n            <button type=\"submit\">+</button>\n          </div>\n        </form>\n\n        <div className=\"status-heading\">{this.state.pendingTasks.length} Pending</div>\n\n        <PendingOverview\n          tasks={this.state.pendingTasks}\n          changeNewTask={this.changeNewTask}\n          checkmarkTask={this.checkmarkTask}\n          editTask={this.editTask}\n          changeEditTask={this.changeEditTask}\n          deleteTask={this.deleteTask}\n        />\n\n        <div className=\"status-heading\">{this.state.completedTasks.length} Completed</div>\n        <CompletedOverview completeTasks={this.state.completedTasks} deleteTask={this.deleteTask} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}